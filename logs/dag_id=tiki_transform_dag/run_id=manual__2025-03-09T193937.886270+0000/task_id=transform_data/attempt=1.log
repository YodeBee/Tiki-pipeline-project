[2025-03-09T19:39:42.623+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2025-03-09T19:39:42.652+0000] {taskinstance.py:2614} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: tiki_transform_dag.transform_data manual__2025-03-09T19:39:37.886270+00:00 [queued]>
[2025-03-09T19:39:42.666+0000] {taskinstance.py:2614} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: tiki_transform_dag.transform_data manual__2025-03-09T19:39:37.886270+00:00 [queued]>
[2025-03-09T19:39:42.667+0000] {taskinstance.py:2867} INFO - Starting attempt 1 of 1
[2025-03-09T19:39:42.691+0000] {taskinstance.py:2890} INFO - Executing <Task(PythonOperator): transform_data> on 2025-03-09 19:39:37.886270+00:00
[2025-03-09T19:39:42.710+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=788) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2025-03-09T19:39:42.713+0000] {standard_task_runner.py:72} INFO - Started process 790 to run task
[2025-03-09T19:39:42.714+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'tiki_transform_dag', 'transform_data', 'manual__2025-03-09T19:39:37.886270+00:00', '--job-id', '298', '--raw', '--subdir', 'DAGS_FOLDER/tiki_transform_dag.py', '--cfg-path', '/tmp/tmp7lzi_47n']
[2025-03-09T19:39:42.716+0000] {standard_task_runner.py:105} INFO - Job 298: Subtask transform_data
[2025-03-09T19:39:42.818+0000] {task_command.py:467} INFO - Running <TaskInstance: tiki_transform_dag.transform_data manual__2025-03-09T19:39:37.886270+00:00 [running]> on host 72a6d77a3cc5
[2025-03-09T19:39:43.396+0000] {taskinstance.py:3134} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='tiki_transform_dag' AIRFLOW_CTX_TASK_ID='transform_data' AIRFLOW_CTX_EXECUTION_DATE='2025-03-09T19:39:37.886270+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-03-09T19:39:37.886270+00:00'
[2025-03-09T19:39:43.398+0000] {logging_mixin.py:190} INFO - Task instance is in running state
[2025-03-09T19:39:43.399+0000] {logging_mixin.py:190} INFO -  Previous state of the Task instance: queued
[2025-03-09T19:39:43.400+0000] {logging_mixin.py:190} INFO - Current task name:transform_data state:running start_date:2025-03-09 19:39:42.653877+00:00
[2025-03-09T19:39:43.401+0000] {logging_mixin.py:190} INFO - Dag name:tiki_transform_dag and current dag run status:running
[2025-03-09T19:39:43.402+0000] {taskinstance.py:732} INFO - ::endgroup::
[2025-03-09T19:39:44.159+0000] {tiki_transform_dag.py:86} INFO - Retrieved raw_blob_name from metadata: tiki_raw_data/raw_20250309_192838.json
[2025-03-09T19:39:50.740+0000] {tiki_transform_dag.py:96} INFO - Loaded raw data from tiki-data/tiki_raw_data/raw_20250309_192838.json, 18339 rows
[2025-03-09T19:39:50.763+0000] {tiki_transform_dag.py:102} INFO - After deduplication: 18336 rows
[2025-03-09T19:39:50.860+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:54: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].apply(lambda x: re.sub(r'["\n\r\t]', '', str(x)) if pd.notnull(x) else x)  # Loại bỏ nháy kép, xuống dòng

[2025-03-09T19:39:51.320+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:61: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].apply(lambda x: True if str(x).lower() in ['true', '1', 'yes'] else False if str(x).lower() in ['false', '0', 'no'] else None)

[2025-03-09T19:39:51.677+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:65: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['category_ids'] = df['category_ids'].apply(lambda x: json.dumps(x) if isinstance(x, list) else '[]')

[2025-03-09T19:39:51.679+0000] {tiki_transform_dag.py:67} INFO - Data cleaning completed
[2025-03-09T19:39:51.682+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = pd.to_numeric(df[field], errors='coerce').fillna(0.0)

[2025-03-09T19:39:51.691+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = pd.to_numeric(df[field], errors='coerce').fillna(0).astype(int)

[2025-03-09T19:39:51.694+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = pd.to_numeric(df[field], errors='coerce').fillna(0).astype(int)

[2025-03-09T19:39:51.696+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:116: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = pd.to_numeric(df[field], errors='coerce').fillna(0).astype(int)

[2025-03-09T19:39:51.726+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:51.761+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:51.772+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:51.811+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:51.823+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:51.827+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:51.832+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:52.267+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:52.275+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:52.283+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:52.290+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:52.307+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:52.317+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:52.348+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:52.380+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:123: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(str).replace('nan', None)

[2025-03-09T19:39:52.383+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:129: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(bool)

[2025-03-09T19:39:52.384+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:129: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(bool)

[2025-03-09T19:39:52.386+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:129: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(bool)

[2025-03-09T19:39:52.387+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:129: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(bool)

[2025-03-09T19:39:52.388+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:129: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(bool)

[2025-03-09T19:39:52.390+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:129: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(bool)

[2025-03-09T19:39:52.391+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:129: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(bool)

[2025-03-09T19:39:52.392+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:129: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df[field] = df[field].astype(bool)

[2025-03-09T19:39:52.396+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:132: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['price'] = df['price'].clip(lower=0)

[2025-03-09T19:39:52.399+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:134: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['original_price'] = df['original_price'].clip(lower=0)

[2025-03-09T19:39:52.402+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:136: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['discount'] = df['discount'].clip(lower=0)

[2025-03-09T19:39:52.406+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:138: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['discount_rate'] = df['discount_rate'].clip(lower=0, upper=100)

[2025-03-09T19:39:52.409+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:140: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['rating_average'] = df['rating_average'].clip(lower=0, upper=5)

[2025-03-09T19:39:52.412+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:142: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['review_count'] = df['review_count'].clip(lower=0)

[2025-03-09T19:39:52.415+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:144: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['quantity_sold'] = df['quantity_sold'].clip(lower=0)

[2025-03-09T19:39:52.424+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:147: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['name'] = df['name'].replace('', 'Unknown')

[2025-03-09T19:39:52.437+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:149: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['seller_name'] = df['seller_name'].replace('', 'Unknown')

[2025-03-09T19:39:52.442+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:151: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['brand_name'] = df['brand_name'].replace('', None)

[2025-03-09T19:39:52.450+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:153: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['primary_category_name'] = df['primary_category_name'].replace('', 'Unknown')

[2025-03-09T19:39:52.473+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:156: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['product_url'] = df['product_url'].apply(lambda x: x if x and isinstance(x, str) and x.startswith('http') else None)

[2025-03-09T19:39:52.489+0000] {warnings.py:112} WARNING - /opt/***/dags/tiki_transform_dag.py:158: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['product_image_url'] = df['product_image_url'].apply(lambda x: x if x and isinstance(x, str) and x.startswith('http') else None)

[2025-03-09T19:39:52.538+0000] {tiki_transform_dag.py:46} INFO - Data validation passed
[2025-03-09T19:39:52.718+0000] {tiki_transform_dag.py:181} INFO - Using transformed_data_path: tiki_transformed_data/
[2025-03-09T19:39:52.719+0000] {tiki_transform_dag.py:186} INFO - Using timestamp: 20250309_193952
[2025-03-09T19:39:52.720+0000] {tiki_transform_dag.py:198} INFO - Processing table: fact_sales
[2025-03-09T19:39:52.721+0000] {tiki_transform_dag.py:200} INFO - Generated blob name: tiki_transformed_data/fact_sales_20250309_193952.csv
[2025-03-09T19:39:53.181+0000] {tiki_transform_dag.py:205} INFO - Saved fact_sales to tiki-data/tiki_transformed_data/fact_sales_20250309_193952.csv
[2025-03-09T19:39:53.182+0000] {tiki_transform_dag.py:198} INFO - Processing table: dim_product
[2025-03-09T19:39:53.183+0000] {tiki_transform_dag.py:200} INFO - Generated blob name: tiki_transformed_data/dim_product_20250309_193952.csv
[2025-03-09T19:39:55.720+0000] {tiki_transform_dag.py:205} INFO - Saved dim_product to tiki-data/tiki_transformed_data/dim_product_20250309_193952.csv
[2025-03-09T19:39:55.722+0000] {tiki_transform_dag.py:198} INFO - Processing table: dim_seller
[2025-03-09T19:39:55.723+0000] {tiki_transform_dag.py:200} INFO - Generated blob name: tiki_transformed_data/dim_seller_20250309_193952.csv
[2025-03-09T19:39:55.934+0000] {tiki_transform_dag.py:205} INFO - Saved dim_seller to tiki-data/tiki_transformed_data/dim_seller_20250309_193952.csv
[2025-03-09T19:39:55.935+0000] {tiki_transform_dag.py:198} INFO - Processing table: dim_category
[2025-03-09T19:39:55.936+0000] {tiki_transform_dag.py:200} INFO - Generated blob name: tiki_transformed_data/dim_category_20250309_193952.csv
[2025-03-09T19:39:56.327+0000] {tiki_transform_dag.py:205} INFO - Saved dim_category to tiki-data/tiki_transformed_data/dim_category_20250309_193952.csv
[2025-03-09T19:39:56.329+0000] {tiki_transform_dag.py:198} INFO - Processing table: dim_brand
[2025-03-09T19:39:56.329+0000] {tiki_transform_dag.py:200} INFO - Generated blob name: tiki_transformed_data/dim_brand_20250309_193952.csv
[2025-03-09T19:39:56.504+0000] {tiki_transform_dag.py:205} INFO - Saved dim_brand to tiki-data/tiki_transformed_data/dim_brand_20250309_193952.csv
[2025-03-09T19:39:56.542+0000] {tiki_transform_dag.py:211} INFO - Pushed transformed_blob_names to XCom: {'fact_sales': 'tiki_transformed_data/fact_sales_20250309_193952.csv', 'dim_product': 'tiki_transformed_data/dim_product_20250309_193952.csv', 'dim_seller': 'tiki_transformed_data/dim_seller_20250309_193952.csv', 'dim_category': 'tiki_transformed_data/dim_category_20250309_193952.csv', 'dim_brand': 'tiki_transformed_data/dim_brand_20250309_193952.csv'}
[2025-03-09T19:39:56.763+0000] {python.py:240} INFO - Done. Returned value was: None
[2025-03-09T19:39:56.786+0000] {taskinstance.py:341} INFO - ::group::Post task execution logs
[2025-03-09T19:39:56.788+0000] {taskinstance.py:353} INFO - Marking task as SUCCESS. dag_id=tiki_transform_dag, task_id=transform_data, run_id=manual__2025-03-09T19:39:37.886270+00:00, execution_date=20250309T193937, start_date=20250309T193942, end_date=20250309T193956
[2025-03-09T19:39:56.835+0000] {logging_mixin.py:190} INFO - Task instance in success state
[2025-03-09T19:39:56.836+0000] {logging_mixin.py:190} INFO -  Previous state of the Task instance: running
[2025-03-09T19:39:56.837+0000] {logging_mixin.py:190} INFO - Dag name:tiki_transform_dag queued_at:2025-03-09 19:39:37.935463+00:00
[2025-03-09T19:39:56.838+0000] {logging_mixin.py:190} INFO - Task hostname:72a6d77a3cc5 operator:PythonOperator
[2025-03-09T19:39:56.920+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2025-03-09T19:39:56.949+0000] {taskinstance.py:3901} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-03-09T19:39:56.953+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
